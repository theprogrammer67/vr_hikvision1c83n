<!--
===============================================================================================

  CodeGear.Common.Targets

  WARNING

  DO NOT MODIFY unless you have made a backup of these files.  Modifying
  this file unless you have knowledge about MSBuild you could cause problems
  when loading or building projects in the IDE or building from the
  command-line.

===============================================================================================
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">

  <UsingTask TaskName="DependencyCheck" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="GenTLB" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="BRCC32" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="BDSCallback" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="ResourceItemDependencyCheck" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="InvokeMSBuild" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="UserTask" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="TDUMP" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="FindItems" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="CreateRcFile" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="EvaluateProperties" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="CreateEntitlementFile" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="CreateAndroidManifestFile" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>
  <UsingTask TaskName="IncrementBuildNumber" AssemblyFile="$(BDS)\bin\Borland.Build.Tasks.Shared.dll"/>

  <PropertyGroup>
    <BDSAppDataBaseDir Condition=" '$(BDSAppDataBaseDir)'=='' ">BDS</BDSAppDataBaseDir>
    <ProductVersion>15.0</ProductVersion>
    <AppDataDir>$(APPDATA)\Embarcadero\$(BDSAppDataBaseDir)\$(ProductVersion)\</AppDataDir>
    <EnvironmentSettings>$(APPDATA)\Embarcadero\$(BDSAppDataBaseDir)\$(ProductVersion)\environment.proj</EnvironmentSettings>
    <EnvOptions>$(APPDATA)\Embarcadero\$(BDSAppDataBaseDir)\$(ProductVersion)\EnvOptions.proj</EnvOptions>
    <Profiles>$(BDS)\bin\CodeGear.Profiles.Targets</Profiles>
  </PropertyGroup>

  <Import Project="$(EnvironmentSettings)" Condition="Exists('$(EnvironmentSettings)')"/>
  <Import Project="$(EnvOptions)" Condition="Exists('$(EnvOptions)') and ('$(ImportEnvOptions)'!='false')"/>
  <Import Project="$(Profiles)" Condition="Exists('$(Profiles)')"/>

  <!--
  ========================================================================
               Static Properties
    Override missing properties from user msbuild file with standard
    build logic.
  ========================================================================
  -->

  <PropertyGroup>
    <ResourceOutput Condition=" '$(ResourceOutput)'=='' ">$(OutputDir)</ResourceOutput>
    <ExeOutput Condition=" '$(ExeOutput)'=='' ">$(OutputDir)</ExeOutput>
    <DllOutput Condition=" '$(DllOutput)'=='' ">$(ExeOutput)</DllOutput>
    <BplOutput Condition=" '$(BplOutput)'=='' ">$(ExeOutput)</BplOutput>
    <DcuOutput Condition=" '$(DcuOutput)'=='' ">$(OutputDir)</DcuOutput>
    <DcpOutput Condition=" '$(DcpOutput)'=='' ">$(DcuOutput)</DcpOutput>
    <HppOutput Condition=" '$(HppOutput)'=='' ">$(DcuOutput)</HppOutput>
    <ObjOutput Condition=" '$(ObjOutput)'=='' ">$(DcuOutput)</ObjOutput>
    <BpiOutput Condition=" '$(BpiOutput)'=='' ">$(DcuOutput)</BpiOutput>

    <ProjectOutputExtension Condition=" '$(ProjectOutputExtension)'=='' ">.exe</ProjectOutputExtension>

    <_OutputDRCFiles Condition=" '$(_Locals)'!='' ">true</_OutputDRCFiles>
    <_OutputDRCFiles Condition=" '$(_OutputDRCFiles)'=='' ">$(OutputDRCFiles)</_OutputDRCFiles>
    <_OutputDRCFiles Condition=" '$(_OutputDRCFiles)'=='' ">false</_OutputDRCFiles>

    <ProducedFileList>$(OutputDir)$(MsBuildProjectFile).filelist.txt</ProducedFileList>

    <NameSpace>$(DCC_Namespace)</NameSpace>

    <UnitAliases>Generics.Collections=System.Generics.Collections;Generics.Defaults=System.Generics.Defaults;WinTypes=Winapi.Windows;WinProcs=Winapi.Windows;DbiTypes=BDE;DbiProcs=BDE;DbiErrs=BDE</UnitAliases>
    <UnitAliases Condition="'$(DCC_UnitAlias)'!=''">$(DCC_UnitAlias)$(UnitAliases)</UnitAliases>

    <!-- common file extensions -->
  </PropertyGroup>

  <!-- Platform-specific extensions -->
  <PropertyGroup Condition="'$(Platform)'=='iOSSimulator'">
      <ExeExt></ExeExt>
      <ObjExt>o</ObjExt>
      <LibExt>a</LibExt>
      <DllExt>dylib</DllExt>
      <BpiExt>bpi</BpiExt>
      <BplExt>dylib</BplExt> 
      <BplPlatformPrefix>bpl</BplPlatformPrefix>
      <DllPlatformPrefix>lib</DllPlatformPrefix>
	  <StaticLibPrefix></StaticLibPrefix>
  </PropertyGroup>

  <!-- Platform-specific extensions -->
  <PropertyGroup Condition="'$(Platform)'=='iOSDevice'">
      <ExeExt></ExeExt>
      <ObjExt>o</ObjExt>
      <LibExt>a</LibExt>
      <DllExt>dylib</DllExt>
      <BpiExt>bpi</BpiExt>
      <BplExt>dylib</BplExt>
      <BplPlatformPrefix>bpl</BplPlatformPrefix>
      <DllPlatformPrefix>lib</DllPlatformPrefix>
      <StaticLibPrefix>lib</StaticLibPrefix>
  </PropertyGroup>


  <!-- Platform-specific extensions -->
  <PropertyGroup Condition="'$(Platform)'=='OSX32'">
      <ExeExt></ExeExt>
      <ObjExt>o</ObjExt>
      <LibExt>a</LibExt>
      <DllExt>dylib</DllExt>
      <BpiExt>bpi</BpiExt>
      <BplExt>dylib</BplExt> 
      <BplPlatformPrefix>bpl</BplPlatformPrefix>
      <DllPlatformPrefix>lib</DllPlatformPrefix>
	  <StaticLibPrefix></StaticLibPrefix>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Platform)'=='Win32'">
      <ExeExt>exe</ExeExt>
      <ObjExt>obj</ObjExt>
      <LibExt>lib</LibExt>     
      <DllExt>dll</DllExt>
      <BpiExt>bpi</BpiExt>    
      <BplExt>bpl</BplExt> 
      <BplPlatformPrefix></BplPlatformPrefix>
      <DllPlatformPrefix></DllPlatformPrefix>
	  <StaticLibPrefix></StaticLibPrefix>
      <Gen64BitTypeLib>false</Gen64BitTypeLib>
  </PropertyGroup>           

  <PropertyGroup Condition="'$(Platform)'=='WinNX32'">
      <ExeExt>exe</ExeExt>
      <ObjExt>obj</ObjExt>
      <LibExt>lib</LibExt>
      <DllExt>dll</DllExt>
      <BpiExt>bpi</BpiExt>
      <BplExt>bpl</BplExt>
      <BplPlatformPrefix></BplPlatformPrefix>
      <DllPlatformPrefix></DllPlatformPrefix>
	  <StaticLibPrefix></StaticLibPrefix>
      <Gen64BitTypeLib>false</Gen64BitTypeLib>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Platform)'=='Win64'">
      <ExeExt>exe</ExeExt>
      <ObjExt>o</ObjExt>
      <LibExt>a</LibExt>     
      <DllExt>dll</DllExt>
      <BpiExt>bpi</BpiExt>    
      <BplExt>bpl</BplExt> 
      <BplPlatformPrefix></BplPlatformPrefix>
      <DllPlatformPrefix></DllPlatformPrefix>
	  <StaticLibPrefix></StaticLibPrefix>
      <Gen64BitTypeLib>true</Gen64BitTypeLib>
  </PropertyGroup>           
  
  <PropertyGroup Condition="'$(Platform)'=='Android'">
      <ExeExt>so</ExeExt>
      <ObjExt>o</ObjExt>
      <LibExt>a</LibExt>
      <DllExt>so</DllExt>
      <BpiExt>bpi</BpiExt>
      <BplExt>so</BplExt>
      <BplPlatformPrefix>lib</BplPlatformPrefix>
      <DllPlatformPrefix>lib</DllPlatformPrefix>
      <StaticLibPrefix>lib</StaticLibPrefix>
  </PropertyGroup>

  <ItemGroup>
    <UnitPath Include="$(DcuOutput);$(SearchPath)"/>
    <ResourcePath Include="$(ResourceOutput);$(SearchPath)"/>
  </ItemGroup>

  <!--
  ========================================================================
               Load Options File
    Load a standard options file the user can define.  This allows
    users to store common paths and compiler options in a single
    msbuild project to simplify the building of large projects with
    many msbuild files.
  ========================================================================
  -->

  <Import Project="$(GlobalOptionFile)" Condition=" Exists('$(GlobalOptionFile)') "/>

  <!-- Ensure that all output paths have a trailing slash -->

  <PropertyGroup>
    <ResourceOutput Condition=" '$(ResourceOutput)'!='' and !HasTrailingSlash('$(ResourceOutput)') ">$(ResourceOutput)\</ResourceOutput>
    <ExeOutput Condition=" '$(ExeOutput)'!='' and !HasTrailingSlash('$(ExeOutput)') ">$(ExeOutput)\</ExeOutput>
    <BplOutput Condition=" '$(BplOutput)'!='' and !HasTrailingSlash('$(BplOutput)') ">$(BplOutput)\</BplOutput>
    <DllOutput Condition=" '$(DllOutput)'!='' and !HasTrailingSlash('$(DllOutput)') ">$(DllOutput)\</DllOutput>
    <DcuOutput Condition=" '$(DcuOutput)'!='' and !HasTrailingSlash('$(DcuOutput)') ">$(DcuOutput)\</DcuOutput>
    <DcpOutput Condition=" '$(DcpOutput)'!='' and !HasTrailingSlash('$(DcpOutput)') ">$(DcpOutput)\</DcpOutput>
    <HppOutput Condition=" '$(HppOutput)'!='' and !HasTrailingSlash('$(HppOutput)') ">$(HppOutput)\</HppOutput>
    <ObjOutput Condition=" '$(ObjOutput)'!='' and !HasTrailingSlash('$(ObjOutput)') ">$(ObjOutput)\</ObjOutput>
    <BpiOutput Condition=" '$(BpiOutput)'!='' and !HasTrailingSlash('$(CpiOutput)') ">$(BpiOutput)\</BpiOutput>
  </PropertyGroup>

  <!--
  ========================================================================
               CoreBuild
    Calls build events in order to prepare and clean up after each
    build.
  ========================================================================
  -->

  <PropertyGroup>
    <BuildDependsOn>
      BeforeBuild;
      CoreBuild;
      AfterBuild
    </BuildDependsOn>

    <CoreBuildDependsOn>
      CreateDirectories;
      ValidateOptions;
      PreBuildEvent;
      ResolveFiles;
      ResourceBuild;
      $(_PreCompileTargets);
      CoreCompile;
      $(_PostCompileTargets);
      IntermediateClean;
      PostBuildEvent
    </CoreBuildDependsOn>
  </PropertyGroup>

  <Target Name="default" DependsOnTargets="Build"/>

  <Target Name="Build" DependsOnTargets="$(BuildDependsOn)"/>
  
  <Target Name="CoreBuild" DependsOnTargets="$(CoreBuildDependsOn)"/>
  
  <Target Name="_CheckPlatformVariable">
    <Error 
      Condition="!(('$(Platform)'=='Win32') Or ('$(Platform)'=='WinNX32') Or ('$(Platform)'=='Win64') Or ('$(Platform)'=='OSX32') Or ('$(Platform)'=='Android') Or ('$(Platform)'=='iOSSimulator') Or ('$(Platform)'=='iOSDevice'))"
      Text="Invalid PLATFORM variable &quot;$(Platform)&quot;. PLATFORM must be one of the following: &quot;Win32&quot;, &quot;Win64&quot;, &quot;Android&quot;, &quot;iOSSimulator&quot;, &quot;iOSDevice&quot;, or &quot;OSX32&quot;. If PLATFORM is defined by your system&apos;s environment, it must be overridden in the RAD Studio IDE or passed explicitly on the command line to MSBuild; e.g., /p:Platform=Win32."
    />
  </Target>

  <!-- Ensure the build environment is setup as expected.
       This is a sanity check for command line building. -->
  <Target Name="_CheckBuildEnvironment">
    <Warning
      Condition="!Exists('$(EnvOptions)') and ('$(EnvOptionsWarn)'!='false')"
      Text="Expected configuration file missing - $(EnvOptions)"/>
  </Target>

  <!--
  ========================================================================
               ReBuild
    Cleans intermediates and final outputs then rebuilds project.
  ========================================================================
  -->

  <PropertyGroup>
    <ReBuildDependsOn>
      ResolveFiles;
      Clean;
      Build
    </ReBuildDependsOn>
  </PropertyGroup>

  <Target Name="ReBuild" DependsOnTargets="$(ReBuildDependsOn)"/>

  <!--
  ========================================================================
               PreBuildEvent
    Execute command line prebuild event if specified by the user.
  ========================================================================
  -->

  <Target Name="PreBuildEvent" 
    Condition=" '$(PreBuildEvent)'!='' And '$(KibitzCompile)'==''"
    DependsOnTargets="$(PreBuildEventDependsOn)">
    <Exec Command="$(PreBuildEvent)" IgnoreExitCode="$(PreBuildEventIgnoreExitCode)" WorkingDirectory="$(OutDir)"/>
  </Target>

  <!--
  ========================================================================
               PostBuildEvent
      Execute command line postbuild event if specified by the user.
  ========================================================================
  -->
  
  <Target Name="_PreOutputTimeStamp">
    <CreateItem Include="%(OutputFile.ModifiedTime)">
      <Output TaskParameter="Include" PropertyName="PreOutputTimeStamp"/>
    </CreateItem>
  </Target>
  
  <Target Name="_PostOutputTimeStamp">
    <CreateItem Include="%(OutputFile.ModifiedTime)">
      <Output TaskParameter="Include" PropertyName="PostOutputTimeStamp"/>
    </CreateItem>
  </Target>

  <Target Name="PostBuildEvent" 
    Condition=" '$(PostBuildEvent)'!=''  And '$(KibitzCompile)'==''
      and ( '$(PostBuildEventExecuteWhen)'=='Always' or '$(PostBuildEventExecuteWhen)'=='' or '$(PreOutputTimeStamp)'!='$(PostOutputTimeStamp)' )"
    DependsOnTargets="$(PostBuildEventDependsOn)">
    <Exec Command="$(PostBuildEvent)"  IgnoreExitCode="$(PostBuildEventIgnoreExitCode)" WorkingDirectory="$(OutDir)"/>
  </Target>
  
   <!--
  ========================================================================
               RunUserTools
    Run user defined tools before the build  
    
  ========================================================================
  -->

  <Target Name="_DependencyCheckUserTool">
    <DependencyCheck 
      Condition="'$(_OutputFilename)'!=''"
      InputFiles="$(FileToCompile)"
      OutputFile="$(_OutputFilename)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
      KibitzTask=""
    >
      <Output 
        TaskParameter="OutOfDate"
        ItemName="OutOfDate"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="Skipped"
      />
    </DependencyCheck>
  </Target>

  <Target Name="__RunUserTool" 
    DependsOnTargets="ResolveFiles;_DependencyCheckUserTool">
    <UserTask
      Condition="'@(Skipped)'=='' And '$(CustomToolCommand)'!=''"
      Command="$(CustomToolCommand)"
      Name="$(_ToolName)"
      Filename="$(FileToCompile)"
      ContinueOnError="false"
    />
    <Warning
      Condition="'$(CustomToolCommand)'==''"
      Text="Command for custom build tool '$(_ToolName)' not found. '$(FileToCompile)' ignored."
    />
  </Target>
  
  <Target Name="_RunUserTool" DependsOnTargets="ResolveFiles">
    <InvokeMSBuild
      Condition="'$(_ToolName)'!='' And '$(FileToCompile)'!=''"
      Project="$(MSBuildProjectFullPath)"
      Targets="__RunUserTool"
      Properties="FileToCompile=$(FileToCompile);_ToolName=$(_ToolName);_OutputFilename=$(CustomToolOutput);Config=$(Config);ForceRebuild=$(ForceRebuild)"
    />
  </Target>

  <Target Name="_RunUserTools" Outputs="%(UserTool.Identity)">
    <InvokeMSBuild
      Condition="'%(UserTool.ToolName)'!='' And '$(FileToCompile)'==''"
      Project="$(MSBuildProjectFullPath)"
      Targets="_RunUserTool"
      Properties="FileToCompile=%(UserTool.Identity);_ToolName=%(UserTool.ToolName);Config=$(Config);ForceRebuild=$(ForceRebuild)"
    />
    <InvokeMSBuild
      Condition="'@(InputFile)'!='' And '%(InputFile.ToolName)'!=''"
      Project="$(MSBuildProjectFullPath)"
      Targets="_RunUserTool"
      Properties="FileToCompile=%(InputFile.Identity);_ToolName=%(InputFile.ToolName);Config=$(Config);ForceRebuild=$(ForceRebuild)"
    />

  </Target>
  <!--
  ========================================================================
               BeforeBuild
    Perform user tasks before the build when BeforeBuild is overridden
    by the user.
  ========================================================================
  -->

  <Target Name="BeforeBuild"/>

  <!--
  ========================================================================
               AfterBuild
    Perform user tasks after the build when BeforeBuild is overridden
    by the user.
  ========================================================================
  -->

  <Target Name="AfterBuild"/>

  <!--
  ========================================================================
               CreateDirectories
    Create directories required to build the projects.
  ========================================================================
  -->

  <PropertyGroup>
    <CreateDirectoriesDependsOn>
      CreateProjectDirectories;
      CreateLocalDirectories
    </CreateDirectoriesDependsOn>
  </PropertyGroup>

  <Target Name="CreateDirectories" DependsOnTargets="$(CreateDirectoriesDependsOn)"/>

  <Target Name="CreateProjectDirectories">
    <MakeDir Directories="
          @(_DirectoryList)
    "/>
  </Target>

  <Target Name="CreateLocalDirectories"/>

  <!--
  ========================================================================
               ResolveFiles
    Resolve source files passed in both the compile itemgroup and
    reference itemgroup to allow the targets to determine what to
    do with them.
  ========================================================================
  -->

  <PropertyGroup>
    <ResolveFilesDependsOn>
      _ResolveConfiguration;
      ResolveSources;
      ResolveResources;
      ResolveLocalResources;
      ResolvePaths;
      ResolveOutputs
    </ResolveFilesDependsOn>
  </PropertyGroup>

  <Target Name="ResolveFiles" DependsOnTargets="$(ResolveFilesDependsOn)"/>

  <Target Name="_ResolveUserTool">
    <FindItems
      Condition="'$(FileToCompile)'!=''"
      Inputs="@(UserTool)"
      Filenames="$(FileToCompile)">
      <Output
        TaskParameter="Outputs"
        ItemName="InputFile"
      />
    </FindItems>
  </Target>

  <Target Name="_ResolveInput" DependsOnTargets="_ResolveUserTool">
    <CreateItem
      Condition="'$(FileToCompile)'==''"
      Include="$(MSBuildProjectFullPath)">
      <Output
        TaskParameter="Include"
        ItemName="InputFile"
      />
    </CreateItem>
    <CreateItem
      Condition="'$(FileToCompile)'!='' And '@(InputFile)'==''"
      Include="$(FileToCompile)">
      <Output
        TaskParameter="Include"
        ItemName="InputFile"
      />
    </CreateItem>
  </Target>

  <Target Name="_ResolveConfiguration">
    <CreateItem Include="@(BuildConfiguration)"
          Condition="'%(BuildConfiguration.Identity)'=='$(Config)'"
          AdditionalMetadata="OptionSets=%(BuildConfiguration.OptionSets)">
      <Output TaskParameter="Include" ItemName="CurrentConfiguration"/>
    </CreateItem>
  </Target>

  <!-- Add Paths to searchpath for resources and units not in the project directory -->
  <Target Name="ResolvePaths">
    <RemoveDuplicates Inputs="@(Compile->'%(RelativeDir)')"
          Condition="( ( '%(EXTENSION)'=='.dfm' or '%(EXTENSION)'=='.nfm' ) And '%(RelativeDir)'!='' ) ">
      <Output TaskParameter="Filtered" ItemName="ResourcePath"/>
    </RemoveDuplicates>

    <RemoveDuplicates Inputs="@(Compile->'%(RelativeDir)')"
          Condition="( '%(EXTENSION)'=='.pas' And '%(RelativeDir)'!='' ) ">
      <Output TaskParameter="Filtered" ItemName="UnitPath"/>
    </RemoveDuplicates>
  </Target>

  <Target Name="_ResolveIcons">

    <CreateItem Include="$(FinalOutputDir)$(MSBuildProjectName).icns"
      Condition="'$(Platform)'=='OSX32' and $(FinalOutputDir)!=''">
      <Output TaskParameter="Include" ItemName="__Icon_MainIcon"/>
    </CreateItem>

    <CreateItem Include="@(OutputFile->'%(RootDir)%(Directory)$(MSBuildProjectName).icns')"
      Condition="'$(Platform)'=='OSX32' and @(OutputFile)!=''">
      <Output TaskParameter="Include" ItemName="__Icon_MainIcon"/>
    </CreateItem>

    <CreateItem Include="$(Icon_MainIcon)"
      Condition="'$(Platform)'!='OSX32'">
      <Output TaskParameter="Include" ItemName="__Icon_MainIcon"/>
    </CreateItem>

    <CreateItem Include="true"
      Condition="Exists('$(MSBuildProjectName).res')">
      <Output TaskParameter="Include" ItemName="__ShouldLinkVersion"/>
    </CreateItem>

  </Target>

  <Target Name="_ResolveResources" DependsOnTargets="_ResolveIcons">
    <!-- Source File Resolution -->
    <CreateItem Include="@(EmbeddedResource)"
          Condition="( '%(EXTENSION)'=='.rc' ) "
          AdditionalMetadata="TargetExtension=%(EmbeddedResource.TargetExtension)">
      <Output TaskParameter="Include" ItemName="_RCFiles"/>
    </CreateItem>

    <CreateItem Include="@(EmbeddedResource)"
          Condition=" '%(EXTENSION)'=='.dfm' or '%(EXTENSION)'=='.nfm' ">
      <Output TaskParameter="Include" ItemName="_Forms"/>
    </CreateItem>

    <!-- Output Resolution -->
    <CreateItem Include="@(EmbeddedResource->'$(ResourceOutput)\%(Filename)%(TargetExtension)')"
          Condition="( '%(EXTENSION)'=='.rc' ) "
          AdditionalMetadata="TargetExtension=%(EmbeddedResource.TargetExtension)">
      <Output TaskParameter="Include" ItemName="_ResourceFiles"/>
    </CreateItem>

    <CreateItem Include="@(EmbeddedResource)"
          Condition="( '%(EXTENSION)'=='.res' ) ">
      <Output TaskParameter="Include" ItemName="_ResourceFiles"/>
    </CreateItem>
  </Target>

  <Target Name="ResolveResources" DependsOnTargets="_ResolveResources"/>

  <Target Name="ResolveSources">
    <!-- Source File Resolution -->
    <CreateItem Include="@(Reference)"
          Condition="( '%(EXTENSION)'=='.pas' ) ">
      <Output TaskParameter="Include" ItemName="_PasFiles"/>
    </CreateItem>

    <CreateItem Include="@(DelphiCompile->'$(MSBuildProjectDirectory)\%(Filename)%(Extension)')">
      <Output TaskParameter="Include" ItemName="_ProjectFiles"/>
    </CreateItem>

    <CreateProperty Value="%(_ProjectFiles.Filename)">
      <Output TaskParameter="Value" PropertyName="_ProjectName"/>
    </CreateProperty>
  </Target>

  <Target Name="ResolveLocalResources"/>

  <Target Name="ResolveOutputs">
    <CreateItem Include="@(_ProjectFiles->'$(BplOutput)%(Filename)$(LibSuffix).bpl')"
          Condition="( '%(EXTENSION)'=='.dpk' Or
                 '%(EXTENSION)'=='.dpkw' ) ">
      <Output TaskParameter="Include" ItemName="_OutputFiles"/>
    </CreateItem>

    <CreateItem Include="@(_ProjectFiles->'$(ExeOutput)%(Filename)$(ProjectOutputExtension)')"
          Condition="( '%(EXTENSION)'=='.dpr' ) ">
      <Output TaskParameter="Include" ItemName="_OutputFiles"/>
    </CreateItem>

    <CreateItem Include="@(_PasFiles->'$(DcuOutput)%(Filename).dcu')"
          Condition=" '$(DependencyCheckUnits)'!='' ">
      <Output TaskParameter="Include" ItemName="_OutputFiles"/>
    </CreateItem>

    <CreateItem Include="@(_PasFiles->'$(DcuOutput)%(Filename).dcu')"
          Condition=" '$(DependencyCheckUnits)'=='' ">
      <Output TaskParameter="Include" ItemName="__OutputFiles"/>
    </CreateItem>

    <CreateItem Include="@(_ProjectFiles->'$(DcuOutput)%(Filename).dcu')">
      <Output TaskParameter="Include" ItemName="__OutputFiles"/>
    </CreateItem>

    <CreateItem Include="@(_ResourceFiles)"
          Condition=" '$(DependencyCheckUnits)'=='' ">
      <Output TaskParameter="Include" ItemName="__OutputFiles"/>
    </CreateItem>
  </Target>

  <!--
  ========================================================================
               ValidateOptions
    Validate the options and paths passed in from the user msbuild
    file.  Throws appropriate warnings and errors to indicate
    options which are invalid or may potentially cause the project
    to fail, such as missing paths.
  ========================================================================
  -->

  <PropertyGroup>
    <ValidateOptionsDependsOn>
      ValidateGlobalOptions;
      ValidateSources;
      ValidateLocalResources;
      ValidatePaths
    </ValidateOptionsDependsOn>
  </PropertyGroup>

  <Target Name="ValidateOptions"
    DependsOnTargets="$(ValidateOptionsDependsOn)"
    Condition=" '$(SkipValidateOptions)'=='' "/>

  <Target Name="ValidatePaths"
    Condition=" '@(UnitPath)'!='' or '@(ResourcePath)'!='' or '@(IncludePath)'!='' or '@(ObjPath)'!='' ">
    <Warning Condition=" '@(UnitPath)'!='' and !Exists('%(UnitPath.Identity)') "
      Text="Path '%(UnitPath.Identity)' in the UnitPath ItemGroup does not exist, you could be missing referenced pas or dcu files."/>
    <Warning Condition=" '@(ResourcePath)'!='' and !Exists('%(ResourcePath.Identity)') "
      Text="Path '%(ResourcePath.Identity)' in the ResourcePath ItemGroup does not exist, you could be missing referenced resource files."/>
    <Warning Condition=" '@(IncludePath)'!='' and !Exists('%(IncludePath.Identity)') "
      Text="Path '%(IncludePath.Identity)' in the IncludePath ItemGroup does not exist."/>
    <Warning Condition=" '@(ObjPath)'!='' and !Exists('%(ObjPath.Identity)') "
      Text="Path '%(ObjPath.Identity)' in the ObjPath ItemGroup does not exist, you could be missing referenced object files."/>
  </Target>

  <Target Name="ValidateGlobalOptions" Condition=" '$(GlobalOptionFile)'!='' ">
    <Warning Condition=" !Exists('$(GlobalOptionFile)') "
      Text="Globals options file cannot be found.  Build may fail or results may be incorrect."/>
  </Target>

  <Target Name="ValidateSources" Condition=" '$(ValidateSource)'!='' ">
    <Warning Condition=" !Exists('%(Reference.Identity)') "
      Text="Referenced file %(Reference.Identity) cannot be found."/>
    <Error Condition=" '%(EmbeddedResource.Extension)'=='.rc' And '%(EmbeddedResource.TargetExtension)'=='' "
      Text="Win32 resource file requires TargetExtension metadata for file %(EmbeddedResource.Identity)"/>
    <Error Condition=" !Exists('%(Compile.Identity)') "
      Text="Source file %(Compile.Identity) cannot be found."/>
    <Error Condition=" !Exists('%(EmbeddedResource.Identity)') "
      Text="Embedded resource file %(EmbeddedResource.Identity) cannot be found."/>
  </Target>

  <Target Name="ValidateLocalResources" Condition=" '$(_Locals)'!='' "/>

  <!--
  ========================================================================
               GenClassesDex
    Create the classes.dex file for Android applications.
  ========================================================================
  -->

  <ItemGroup>
    <JavaAaptPath Include="$(SDKAaptPath)"/>
  </ItemGroup>

  <PropertyGroup>
    <ClassesDexFileName>classes.dex</ClassesDexFileName>
    <ClassesDexPath>$(MSBuildProjectDirectory)\$(Platform)\$(Config)\$(ClassesDexFileName)</ClassesDexPath>

    <StaticClassesDexFileName>classes.dex.jar</StaticClassesDexFileName>
    <StaticClassesDexPathDebug>$(BDS)\lib\android\debug\$(StaticClassesDexFileName)</StaticClassesDexPathDebug>
    <StaticClassesDexPathRelease>$(BDS)\lib\android\release\$(StaticClassesDexFileName)</StaticClassesDexPathRelease>

    <StaticClassesDexPath Condition="'$(Config)'=='debug'">$(StaticClassesDexPathDebug)</StaticClassesDexPath>
    <StaticClassesDexPath Condition="('$(Config)'!='debug' And Exists('$(StaticClassesDexPathRelease)'))">$(StaticClassesDexPathRelease)</StaticClassesDexPath>
    <StaticClassesDexPath Condition="('$(Config)'!='debug' And !Exists('$(StaticClassesDexPathRelease)'))">$(StaticClassesDexPathDebug)</StaticClassesDexPath>

    <PredexedJarSuffix>-dexed</PredexedJarSuffix>
    <JavaDxPath>@(JavaAaptPath->'%(RootDir)%(Directory)')dx.bat</JavaDxPath>
    <DxCmd>PATH $(JDKPath); %26 "$(JavaDxPath)" --dex --output=</DxCmd>
    <DxClassesDexCmd>$(DxCmd)"$(ClassesDexPath)"</DxClassesDexCmd>
  </PropertyGroup>

  <Target Name="GetProjectJars">
    <ItemGroup>
        <_JarsLocations Include="%(JavaReference.FullPath)" Condition="'%(JavaReference.Disabled)'!='True'">
            <PredexedJar>$(MSBuildProjectDirectory)\$(Platform)\$(Config)\%(JavaReference.Filename)$(PredexedJarSuffix)%(JavaReference.Extension)</PredexedJar>
        </_JarsLocations>
    </ItemGroup>
  </Target>

  <Target Name="BuildPredexedJar" DependsOnTargets="GetProjectJars">
    <Exec Condition="( '@(_JarsLocations)'!='' And !Exists('%(_JarsLocations.PredexedJar)') )"
        Command='$(DxCmd)"%(_JarsLocations.PredexedJar)" %22%(_JarsLocations.FullPath)%22'/>
  </Target>

  <Target Name="BuildClassesDex" DependsOnTargets="BuildPredexedJar" Condition="$(Platform)=='Android'">
    <Exec Condition="'@(_JarsLocations)'!=''"
        Command="$(DxClassesDexCmd) %22$(StaticClassesDexPath)%22 @(_JarsLocations->'%22%(PredexedJar)%22', ' ')"/>
  </Target>
  
  <!--
  ========================================================================
               ResourceBuild
    Resolve non-standard resource dependencies and build resources
  ========================================================================
  -->

  <PropertyGroup>
    <ResourceBuildDependsOn>
      Win32ResourceDependencies;
      BuildWin32Resources
    </ResourceBuildDependsOn>
  </PropertyGroup>

  <Target Name="ResourceBuild" DependsOnTargets="$(ResourceBuildDependsOn)"/>

  <Target Name="Win32ResourceDependencies" Condition=" '@(_RCFiles)'!='' ">
    <GetResourceDependencies Files="@(_RCFiles)">
      <Output TaskParameter="Dependencies" ItemName="_RCDependencies"/>
    </GetResourceDependencies>
  </Target>

  <Target Name="BuildWin32Resources" Condition=" '@(_RCFiles)'!='' "
    Inputs="@(_RCFiles);%(_RCDependencies.Dependencies)"
    Outputs="@(_ResourceFiles)">
        <BuildDelphiResources Files="@(_RCFiles)" OutputDir="$(ResourceOutput)"/>
  </Target>

  <Target Name="__ResourceItemDepCheck" DependsOnTargets="__SetProjectResourceFileName">
    <ResourceItemDependencyCheck
      Condition="'@(RcItem)'!=''"
      InputFiles="@(RcItem)"
      AdditionalInputs="@(__ProjectResourceOutputFile)"
      OutputFile="@(__ProjectResourceFile)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RcProjectCompile"
      />
    </ResourceItemDependencyCheck>
  </Target>

  <Target Name="BuildProjectResourceFile" DependsOnTargets="__ResourceItemDepCheck"
    Condition="'@(RcItem)'!=''">
    <BRCC32 Condition="'@(RcProjectCompile)'!=''"
      Compile="%(RcProjectCompile.Identity)"
      ForceExecute="true"
      CompilerToUse="rc"
      CodePage="65001"
      ProjectFileName="$(MSBuildProjectFullPath)"
      ResFiles="@(__ProjectResourceOutputFile)"
      ResponseFilename="$(BRCC_ResponseFilename)"
      Verbose="$(BRCC_Verbose)"
      ShowStdOut="$(ShowStdOut)"
    />
  </Target>

  <!---
  ========================================================================
               BuildVersionResource
    Create and build resource used to store version information and project
    icon.
  ========================================================================
  -->

  <PropertyGroup Condition="'$(Platform)'=='OSX32' Or '$(Platform)'=='iOSSimulator' Or '$(Platform)'=='iOSDevice'">
    <VerInfo_MajorVer Condition=" '$(VerInfo_MajorVer)'=='' ">1</VerInfo_MajorVer>
    <VerInfo_MinorVer Condition=" '$(VerInfo_MinorVer)'=='' ">0</VerInfo_MinorVer>
  </PropertyGroup>

  <Target Name="__SetVersionResourceFileName">
    <CreateItem Include="$(MSBuildProjectName).vrc">
      <Output TaskParameter="Include" ItemName="__ProjectVersionFile"/>
    </CreateItem>
    <CreateItem Include="$(MSBuildProjectName).res">
      <Output TaskParameter="Include" ItemName="__ProjectVersionOutputFile"/>
    </CreateItem>
  </Target>

  <Target Name="__ResourceVersionResDepCheck" DependsOnTargets="__SetVersionResourceFileName">
    <DependencyCheck
      InputFiles="$(MSBuildProjectFullPath)"
      OutputFile="@(__ProjectVersionOutputFile)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
      KibitzTask="false"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RcVersionCompile"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="SkippedPasFiles"
      />
    </DependencyCheck>
  </Target>

  <!--
          ========================================================================
                  Rest of files that could be required to regenerate

            info.plist file for OSX and iOS platforms
            entitlements file for OSX and iOS platforms
            AndroidManifest.xml file for Android platform
          ========================================================================
  -->

  <!--
    Info.plist file dependency checking
  -->
  <Target Name="__SetInfoPlistFileName">
    <CreateItem Include="$(MSBuildProjectDirectory)\$(Platform)\$(Config)\$(MSBuildProjectName).info.plist">
      <Output TaskParameter="Include" ItemName="__InfoPlistOutputFile"/>
    </CreateItem>
  </Target>

  <Target Name="__InfoPlistDepCheck"
    Condition="('$(Platform)'=='OSX32' Or '$(Platform)'=='iOSSimulator' Or '$(Platform)'=='iOSDevice')"
    DependsOnTargets="__SetInfoPlistFileName">
    <DependencyCheck
      InputFiles="$(MSBuildProjectFullPath)"
      OutputFile="@(__InfoPlistOutputFile)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
      KibitzTask="false"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RcInfoPlistFile"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="SkippedPasFiles"
      />
    </DependencyCheck>
  </Target>

  <!--
    ResourceRules.plist file dependency checking
  -->
  <Target Name="__SetResourceRulesPlistFileName">
    <CreateItem Include="$(MSBuildProjectDirectory)\$(Platform)\$(Config)\ResourceRules.plist">
      <Output TaskParameter="Include" ItemName="__ResourceRulesPlistOutputFile"/>
    </CreateItem>
  </Target>

  <Target Name="__ResourceRulesPlistDepCheck"
    Condition="('$(Platform)'=='iOSDevice') And ('$(BT_BuildType)'=='Adhoc' Or '$(BT_BuildType)'=='AppStore')"
    DependsOnTargets="__SetResourceRulesPlistFileName">
    <DependencyCheck
      InputFiles="$(MSBuildProjectFullPath)"
      OutputFile="@(__ResourceRulesPlistOutputFile)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
      KibitzTask="false"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RcResourceRulesPlistFile"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="SkippedPasFiles"
      />
    </DependencyCheck>
  </Target>

  <!--
     entitlements file dependency checking
  -->
  <Target Name="__SetEntitlementsFileName">
    <CreateItem Include="$(MSBuildProjectDirectory)\$(Platform)\$(Config)\$(MSBuildProjectName).entitlements">
      <Output TaskParameter="Include" ItemName="__EntitlementsOutputFile"/>
    </CreateItem>
  </Target>

  <Target Name="__EntitlementsDepCheck"
    Condition="('$(Platform)'=='OSX32' Or '$(Platform)'=='iOSSimulator' Or '$(Platform)'=='iOSDevice')"
    DependsOnTargets="__SetEntitlementsFileName">
    <DependencyCheck
      InputFiles="$(MSBuildProjectFullPath)"
      OutputFile="@(__EntitlementsOutputFile)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
      KibitzTask="false"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RcEntitlementsFile"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="SkippedPasFiles"
      />
    </DependencyCheck>
  </Target>

  <!--
     AndroidManifest.xml file dependency checking
  -->
  <Target Name="__SetAndroidManifestFileName">
    <CreateItem Include="$(MSBuildProjectDirectory)\$(Platform)\$(Config)\AndroidManifest.xml">
      <Output TaskParameter="Include" ItemName="__AndroidManifestOutputFile"/>
    </CreateItem>
  </Target>

  <Target Name="__AndroidManifestDepCheck"
    Condition="'$(Platform)'=='Android'" DependsOnTargets="__SetAndroidManifestFileName">
    <DependencyCheck
      InputFiles="$(MSBuildProjectFullPath)"
      OutputFile="@(__AndroidManifestOutputFile)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      Build="$(ForceRebuild)"
      KibitzTask="false"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RcAndroidManifestFile"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="SkippedPasFiles"
      />
    </DependencyCheck>
  </Target>

  <Target Name="__BuildShouldBuildVersion"
    DependsOnTargets="__ResourceVersionResDepCheck;__InfoPlistDepCheck;__ResourceRulesPlistDepCheck;__EntitlementsDepCheck;__AndroidManifestDepCheck">
    <PropertyGroup>
        <__ShouldBuildVersion Condition="'$(__ShouldBuildVersion)'==''">false</__ShouldBuildVersion>
        <__ShouldBuildVersion Condition="(('@(RcVersionCompile)'!='') Or (!Exists('@(__ProjectVersionOutputFile)')))">true</__ShouldBuildVersion>

        <!--
            New conditionals to set ShouldBuildVersion to "true" keeping in mind
            other files that could be necessary for the application depending of the platform
            and platform configuration (BuildType) and only for application or console project types
            <Project>.info.plist, ResourceRules.plist, <Project>..entitlements, AndroidManifest.xml
        -->
        <__ShouldBuildVersion Condition="('$(Platform)'=='OSX32' Or '$(Platform)'=='iOSSimulator' Or '$(Platform)'=='iOSDevice')
                              And (('@(RcEntitlementsFile)'!='') Or (!Exists('@(__EntitlementsOutputFile)')))">true</__ShouldBuildVersion>
        <__ShouldBuildVersion Condition="('$(Platform)'=='OSX32' Or '$(Platform)'=='iOSSimulator' Or '$(Platform)'=='iOSDevice')
                              And (('@(RcInfoPlistFile)'!='') Or (!Exists('@(__InfoPlistOutputFile)')))">true</__ShouldBuildVersion>
        <__ShouldBuildVersion Condition="(('$(Platform)'=='iOSDevice') And ('$(BT_BuildType)'=='Adhoc' Or '$(BT_BuildType)'=='AppStore'))
                              And (('@(RcResourceRulesPlistFile)'!='') Or (!Exists('@(__ResourceRulesPlistOutputFile)')))">true</__ShouldBuildVersion>
        <__ShouldBuildVersion Condition="'$(Platform)'=='Android'
                              And (('@(RcAndroidManifestFile)'!='') Or (!Exists('@(__AndroidManifestOutputFile)')))">true</__ShouldBuildVersion>
    </PropertyGroup>
  </Target>

  <Target Name="__CreateVerOutputName">
    <CreateItem Include="$(MSBuildProjectName).vrc">
      <Output TaskParameter="Include" ItemName="VerInfo_OutputFile"/>
    </CreateItem>
  </Target>

  <PropertyGroup>
    <__Manifest_File Condition="Exists('$(Manifest_File)')">$(Manifest_File)</__Manifest_File>
    <__Manifest_File Condition="!Exists('$(Manifest_File)')"></__Manifest_File>
  </PropertyGroup>

  <!--
  <Target Name="_ConvertIconToIcns" Condition="('$(Platform)'=='OSX32') And ('$(Icon_MainIcon)'!='')">
    <Exec Command="%22$(BDS)\bin\ico2icns%22 %22$(Icon_MainIcon)%22 %22@(__Icon_MainIcon)%22" WorkingDirectory="$(MSBuildProjectDirectory)"/>
  </Target>
  -->

  <Target Name="_BuildRCFile">
    <CreateRcFile
        OutputFile="@(VerInfo_OutputFile)"
        IncludeVerInfo="$(VerInfo_IncludeVerInfo)"
        AutoGenVersion="$(VerInfo_AutoGenVersion)"
        MajorVer="$(VerInfo_MajorVer)"
        MinorVer="$(VerInfo_MinorVer)"
        Release="$(VerInfo_Release)"
        Build="$(VerInfo_Build)"
        Debug="$(VerInfo_Debug)"
        PreRelease="$(VerInfo_PreRelease)"
        Special="$(VerInfo_Special)"
        Private="$(VerInfo_Private)"
        DLL="$(VerInfo_DLL)"
        Locale="$(VerInfo_Locale)"
        KeysString="$(VerInfo_Keys)"
        ManifestFile="$(__Manifest_File)"
        VCLCustomStyles="$(VCL_Custom_Styles)"
        Icon="@(__Icon_MainIcon)"
        IPhone_AppIcon57="$(iPhone_AppIcon57)"
        IPhone_AppIcon60="$(iPhone_AppIcon60)"
        IPhone_AppIcon114="$(iPhone_AppIcon114)"
        IPhone_AppIcon120="$(iPhone_AppIcon120)"
        IPhone_Spotlight29="$(iPhone_Spotlight29)"
        IPhone_Spotlight40="$(iPhone_Spotlight40)"
        IPhone_Spotlight58="$(iPhone_Spotlight58)"
        IPhone_Spotlight80="$(iPhone_Spotlight80)"
        IOS_AppStore512="$(iOS_AppStore512)"
        IOS_AppStore1024="$(iOS_AppStore1024)"
        IPad_AppIcon72="$(iPad_AppIcon72)"
        IPad_AppIcon76="$(iPad_AppIcon76)"
        IPad_AppIcon144="$(iPad_AppIcon144)"
        IPad_AppIcon152="$(iPad_AppIcon152)"
        IPad_SpotLight40="$(iPad_SpotLight40)"
        IPad_SpotLight50="$(iPad_SpotLight50)"
        IPad_SpotLight80="$(iPad_SpotLight80)"
        IPad_SpotLight100="$(iPad_SpotLight100)"
        IPad_Setting29="$(iPad_Setting29)"
        IPad_Setting58="$(iPad_Setting58)"
        ResourcePlatform="$(Platform)"
        OSXOutputDir="$(OutputDir)"
        TargetedPlatforms="$(TargetedPlatforms)"
        ProjectName="$(MSBuildProjectName)"
        SanitizedProjectName="$(SanitizedProjectName)"
        MiniOSVersion="$(DCC_iOSMinimumVersion)"
        BTBuildType="$(BT_BuildType)"
        DTPlatformBuild="$(Profile_DTPlatformBuild)"
        DTXCodeBuild="$(Profile_DTXcodeBuild)"
        UIDeviceFamily="$(VerInfo_UIDeviceFamily)"
        OrientationPortrait="$(OrientationPortrait)"
        OrientationPortraitUpsideDown="$(OrientationPortraitUpsideDown)"
        OrientationLandscapeLeft="$(OrientationLandscapeLeft)"
        OrientationLandscapeRight="$(OrientationLandscapeRight)"
    />
  </Target>

  <Target Name="BuildShouldBuildVersion" DependsOnTargets="__CreateVerOutputName;__BuildShouldBuildVersion"/>

  <Target Name="__BuildRCFile" DependsOnTargets="__CreateVerOutputName;__BuildShouldBuildVersion">
    <CallTarget Targets="_BuildRCFile" Condition="'$(__ShouldBuildVersion)'=='true'"/>
  </Target>

  <Target Name="BuildVersionResource" DependsOnTargets="__BuildRCFile" Condition="'$(SkipResGeneration)'!='true'">
    <BRCC32 Condition="'$(__ShouldBuildVersion)'=='true'"
      Compile="@(__ProjectVersionFile)"
      ForceExecute="true"
      CompilerToUse="rc"
      CodePage="65001"
      ProjectFileName="$(MSBuildProjectFullPath)"
      ResFiles="@(__ProjectVersionOutputFile)"
      ResponseFilename="$(BRCC_ResponseFilename)"
      Verbose="$(BRCC_Verbose)"
      ShowStdOut="$(ShowStdOut)"
    />
    <Delete Files="@(__ProjectVersionFile)" Condition="Exists('@(__ProjectVersionFile)') And ('$(SaveVRC)'!='true')"/>
  </Target>

  <Target Name="AutoIncBuildNumber"
    Condition="'$(VerInfo_AutoIncVersion)'=='true' And ('$(Platform)'!='Android' Or ('$(Platform)'=='Android' And '$(BT_BuildType)'=='AppStore'))">
    <IncrementBuildNumber
        ProjectFileName="$(MSBuildProjectFullPath)"
        Platform="$(Platform)"
        Configuration="$(Config)"
        KeysString="$(VerInfo_Keys)"
    />
  </Target>
  

  <!--
  ========================================================================
               BuildEntitlementList
    Create the EntitlementList for OS X applcation that wish to
    be sandboxed.
  ========================================================================
  -->

  <Target Name="__SetEntitlementFileSettings">
      <PropertyGroup>
        <__EntitlementFileName>$(OutputDir)$(MSBuildProjectName).entitlements</__EntitlementFileName>
        <ShouldGenEntitlementFile Condition="(('$(Platform)'=='OSX32' Or '$(Platform)'=='iOSSimulator' Or '$(Platform)'=='iOSDevice'))">true</ShouldGenEntitlementFile>
        <EL_Debug Condition="'$(BT_BuildType)'=='Debug'">true</EL_Debug>
        <EL_Debug Condition="'$(BT_BuildType)'!='Debug'">false</EL_Debug>
        <EL_SandBox Condition="'$(BT_BuildType)'=='AppStore' And '$(Platform)'=='OSX32'">true</EL_SandBox>
        <EL_SandBox Condition="'$(BT_BuildType)'!='AppStore' And '$(Platform)'=='OSX32'">false</EL_SandBox>
        <EL_iOSAppStore Condition="'$(BT_BuildType)'=='AppStore' And '$(Platform)'=='iOSDevice'">true</EL_iOSAppStore>
        <EL_iOSAppStore Condition="'$(BT_BuildType)'!='AppStore' And '$(Platform)'=='iOSDevice'">false</EL_iOSAppStore>
        <!--Team ID to build application-identifier and keychain-access-groups keys for entitlements file-->
        <EL_DevTeamId Condition="'$(BT_BuildType)'=='AppStore' And '$(PF_DevTeamIdAppStore)'==''">$(ENV_PF_DevTeamIdAppStore)</EL_DevTeamId>
        <EL_DevTeamId Condition="'$(BT_BuildType)'=='AppStore' And '$(PF_DevTeamIdAppStore)'!=''">$(PF_DevTeamIdAppStore)</EL_DevTeamId>
        <VerInfo_BundleId Condition="'$(SanitizedProjectName)'!='' And '$(VerInfo_BundleId)'=='$(MSBuildProjectName)'">$(SanitizedProjectName)</VerInfo_BundleId>
        <VerInfo_BundleId Condition="'$(SanitizedProjectName)'==''">$(MSBuildProjectName)</VerInfo_BundleId>
      </PropertyGroup>
  </Target>

  <Target Name="__CheckFullBundleId" Condition="'$(Platform)'=='iOSDevice' And '$(BT_BuildType)'=='AppStore'">
    <Warning Condition="'$(EL_DevTeamId)'==''"
        Text="Developer Program ID not specified in provisioning options"/>
    <Warning Condition="'$(VerInfo_BundleId)'==''"
        Text="Bundle Identifier not specified in version information"/>
  </Target>

  <Target Name="BuildEntitlementList" DependsOnTargets="__SetEntitlementFileSettings;__CheckFullBundleId">
    <CreateEntitlementFile Condition="'$(ShouldGenEntitlementFile)'=='true'"
        OutputFile="$(__EntitlementFileName)"
        SandBox="$(EL_SandBox)"
        Debug="$(EL_Debug)"
        TargetPlatform="$(Platform)"
        ProjectName="$(MSBuildProjectName)"
        AppDataDir="$(AppDataDir)"
        ReadWritePictures="$(EL_ReadWritePictures)"
        ReadWriteMovies="$(EL_ReadWriteMovies)"
        ChildProcessInheritance="$(EL_ChildProcessInheritance)"
        Location="$(EL_Location)"
        ReadOnlyFileDialog="$(EL_ReadOnlyFileDialog)"
        ReadWriteDownloads="$(EL_ReadWriteDownloads)"
        OutgoingNetwork="$(EL_OutgoingNetwork)"
        USBDevices="$(EL_USBDevices)"
        Printing="$(EL_Printing)"
        ReadWriteCalendars="$(EL_ReadWriteCalendars)"
        ReadWriteAddressBook="$(EL_ReadWriteAddressBook)"
        IncomingNetwork="$(EL_IncomingNetwork)"
        RecordingMicrophone="$(EL_RecordingMicrophone)"
        ReadWriteMusic="$(EL_ReadWriteMusic)"
        ReadWriteFileDialog="$(EL_ReadWriteFileDialog)"
        ReadOnlyPictures="$(EL_ReadOnlyPictures)"
        ReadOnlyMovies="$(EL_ReadOnlyMovies)"
        ReadOnlyMusic="$(EL_ReadOnlyMusic)"
        CaptureCamera="$(EL_CaptureCamera)"
        iOSAppStore="$(EL_iOSAppStore)"
        FullBundleId="$(EL_DevTeamId).$(VerInfo_BundleId)"
        ApsEnvironment="$(EL_ApsEnvironment)"
    />
  </Target>



  <!--
  ========================================================================
               BuildAndroidManifestList
    Create the Manifest file for Android applcation
  ========================================================================
  -->

  <Target Name="__SetAndroidManifestSettings">
    <PropertyGroup>
        <__AndroidManifestFileName>$(OutputDir)AndroidManifest.xml</__AndroidManifestFileName>
        <ShouldCreateManifestFile Condition="'$(Platform)'=='Android'">true</ShouldCreateManifestFile>
        <IsDebugBuildType Condition="'$(BT_BuildType)'=='Debug'">True</IsDebugBuildType>
        <AUP_INTERNET Condition="'$(AUP_INTERNET)'!='true' And '$(IsDebugBuildType)'=='True'">True</AUP_INTERNET>
        <IncludeAndroid_Splash Condition="'$(IncludeAndroid_Splash)'==''">true</IncludeAndroid_Splash>
    </PropertyGroup>
  </Target>

  <Target Name="BuildAndroidManifestList" DependsOnTargets="__SetAndroidManifestSettings">
    <CreateAndroidManifestFile Condition="'$(ShouldCreateManifestFile)'=='true'"
        OutputFile="$(__AndroidManifestFileName)"
        ProjectName="$(MSBuildProjectName)"
        SanitizedProjectName="$(SanitizedProjectName)"
        KeysString="$(VerInfo_Keys)"
        IsDebugBuildType="$(IsDebugBuildType)"
        Android_SplashTileMode="$(Android_SplashTileMode)"
        Android_SplashGravity="$(Android_SplashGravity)"
        IncludeAndroid_Splash="$(IncludeAndroid_Splash)"
        AppDataDir="$(AppDataDir)"
        ACCESS_CHECKING_PROPERTIES="$(AUP_ACCESS_CHECKIN_PROPERTIES)"
        ACCESS_COARSE_LOCATION="$(AUP_ACCESS_COARSE_LOCATION)"
        ACCESS_FINE_LOCATION="$(AUP_ACCESS_FINE_LOCATION)"
        ACCESS_SURFACE_FLINGER="$(AUP_ACCESS_SURFACE_FLINGER)"
        ACCESS_NETWORK_STATE="$(AUP_ACCESS_NETWORK_STATE)"
        ACCESS_LOCATION_EXTRA_COMMANDS="$(AUP_ACCESS_LOCATION_EXTRA_COMMANDS)"
        ACCESS_MOCK_LOCATION="$(AUP_ACCESS_MOCK_LOCATION)"
        ACCESS_WIFI_STATE="$(AUP_ACCESS_WIFI_STATE)"
        ACCOUNT_MANAGER="$(AUP_ACCOUNT_MANAGER)"
        ADD_VOICEMAIL="$(AUP_ADD_VOICEMAIL)"
        ADMOB="$(EL_AdMob)"
        AUTHENTICATE_ACCOUNTS="$(AUP_AUTHENTICATE_ACCOUNTS)"
        BATTERY_STATS="$(AUP_BATTERY_STATS)"
        BIND_ACCESSIBILITY_SERVICE="$(AUP_BIND_ACCESSIBILITY_SERVICE)"
        BIND_DEVICE_ADMIN="$(AUP_BIND_DEVICE_ADMIN)"
        BIND_INPUT_METHOD="$(AUP_BIND_INPUT_METHOD)"
        BIND_VPN_SERVICE="$(AUP_BIND_VPN_SERVICE)"
        BIND_REMOTEVIEWS="$(AUP_BIND_REMOTEVIEWS)"
        BIND_TEXT_SERVICE="$(AUP_BIND_TEXT_SERVICE)"
        BIND_WALLPAPER="$(AUP_BIND_WALLPAPER)"
        BIND_APPWIDGET="$(AUP_BIND_APPWIDGET)"
        BLUETOOTH="$(AUP_BLUETOOTH)"
        BLUETOOTH_ADMIN="$(AUP_BLUETOOTH_ADMIN)"
        BRICK="$(AUP_BRICK)"
        BROADCAST_STICKY="$(AUP_BROADCAST_STICKY)"
        BROADCAST_PACKAGE_REMOVED="$(AUP_BROADCAST_PACKAGE_REMOVED)"
        BROADCAST_SMS="$(AUP_BROADCAST_SMS)"
        BROADCAST_WAP_PUSH="$(AUP_BROADCAST_SMS)"
        CALL_PHONE="$(AUP_CALL_PHONE)"
        CALL_PRIVILEGED="$(AUP_CALL_PRIVILEGED)"
        CAMERA="$(AUP_CAMERA)"
        CHANGE_COMPONENT_ENABLED_STATE="$(AUP_CHANGE_COMPONENT_ENABLED_STATE)"
        CHANGE_CONFIGURATION="$(AUP_CHANGE_CONFIGURATION)"
        CHANGE_NETWORK_STATE="$(AUP_CHANGE_NETWORK_STATE)"
        CHANGE_WIFI_STATE="$(AUP_CHANGE_WIFI_STATE)"
        CHANGE_WIFI_MULTICAST_STATE="$(AUP_CHANGE_WIFI_MULTICAST_STATE)"
        CLEAR_APP_CACHE="$(AUP_CLEAR_APP_CACHE)"
        CLEAR_APP_USER_DATA="$(AUP_CLEAR_APP_USER_DATA)"
        CONTROL_LOCATION_UPDATES="$(AUP_CONTROL_LOCATION_UPDATES)"
        DELETE_CACHE_FILES="$(AUP_DELETE_CACHE_FILES)"
        DELETE_PACKAGES="$(AUP_DELETE_PACKAGES)"
        DEVICE_POWER="$(AUP_DEVICE_POWER)"
        DISABLE_KEYGUARD="$(AUP_DISABLE_KEYGUARD)"
        DIAGNOSTIC="$(AUP_DIAGNOSTIC)"
        DUMP="$(AUP_DUMP)"
        EXPAND_STATUS_BAR="$(AUP_EXPAND_STATUS_BAR)"
        FACTORY_TEST="$(AUP_FACTORY_TEST)"
        FLASHLIGHT="$(AUP_FLASHLIGHT)"
        FORCE_BACK="$(AUP_FORCE_BACK)"
        GET_ACCOUNTS="$(AUP_GET_ACCOUNTS)"
        GET_PACKAGE_SIZE="$(AUP_GET_PACKAGE_SIZE)"
        GET_TASKS="$(AUP_GET_TASKS)"
        GLOBAL_SEARCH="$(AUP_GLOBAL_SEARCH)"
        HARDWARE_TEST="$(AUP_HARDWARE_TEST)"
        INJECT_EVENTS="$(AUP_INJECT_EVENTS)"
        INSTALL_LOCATION_PROVIDER="$(AUP_INSTALL_LOCATION_PROVIDER)"
        INSTALL_PACKAGES="$(AUP_INSTALL_PACKAGES)"
        INTERNAL_SYSTEM_WINDOW="$(AUP_INTERNAL_SYSTEM_WINDOW)"
        INTERNET="$(AUP_INTERNET)"
        KILL_BACKGROUND_PROCESSES="$(AUP_KILL_BACKGROUND_PROCESSES)"
        MANAGE_ACCOUNTS="$(AUP_MANAGE_ACCOUNTS)"
        MANAGE_APP_TOKENS="$(AUP_MANAGE_APP_TOKENS)"
        MASTER_CLEAR="$(AUP_MASTER_CLEAR)"
        MODIFY_AUDIO_SETTINGS="$(AUP_MODIFY_AUDIO_SETTINGS)"
        MODIFY_PHONE_STATE="$(AUP_MODIFY_PHONE_STATE)"
        MOUNT_FORMAT_FILESYSTEMS="$(AUP_MOUNT_FORMAT_FILESYSTEMS)"
        MOUNT_UNMOUNT_FILESYSTEMS="$(AUP_MOUNT_UNMOUNT_FILESYSTEMS)"
        NFC="$(AUP_NFC)"
        PROCESS_OUTGOING_CALLS="$(AUP_PROCESS_OUTGOING_CALLS)"
        READ_CALENDAR="$(AUP_READ_CALENDAR)"
        READ_CALL_LOG="$(AUP_READ_CALL_LOG)"
        READ_CONTACTS="$(AUP_READ_CONTACTS)"
        READ_EXTERNAL_STORAGE="$(AUP_READ_EXTERNAL_STORAGE)"
        READ_FRAME_BUFFER="$(AUP_READ_FRAME_BUFFER)"
        READ_HISTORY_BOOKMARKS="$(AUP_READ_HISTORY_BOOKMARKS)"
        READ_LOGS="$(AUP_READ_LOGS)"
        READ_PHONE_STATE="$(AUP_READ_PHONE_STATE)"
        READ_PROFILE="$(AUP_READ_PROFILE)"
        READ_SMS="$(AUP_READ_SMS)"
        READ_SOCIAL_STREAM="$(AUP_READ_SOCIAL_STREAM)"
        READ_SYNC_SETTINGS="$(AUP_READ_SYNC_SETTINGS)"
        READ_SYNC_STATS="$(AUP_READ_SYNC_STATS)"
        READ_USER_DICTIONARY="$(AUP_READ_USER_DICTIONARY)"
        REBOOT="$(AUP_REBOOT)"
        RECEIVE_BOOT_COMPLETED="$(AUP_RECEIVE_BOOT_COMPLETED)"
        RECEIVE_MMS="$(AUP_RECEIVE_MMS)"
        RECEIVE_SMS="$(AUP_RECEIVE_SMS)"
        RECEIVE_WAP_PUSH="$(AUP_RECEIVE_WAP_PUSH)"
        RECEIVE_PUSH_NOTIFICATIONS="$(EL_ApsEnvironment)"
        RECORD_AUDIO="$(AUP_RECORD_AUDIO)"
        REORDER_TASKS="$(AUP_REORDER_TASKS)"
        SEND_SMS="$(AUP_SEND_SMS)"
        SET_ACTIVITY_WATCHER="$(AUP_SET_ACTIVITY_WATCHER)"
        SET_ALARM="$(AUP_SET_ALARM)"
        SET_ALWAYS_FINISH="$(AUP_SET_ALWAYS_FINISH)"
        SET_ANIMATION_SCALE="$(AUP_SET_ANIMATION_SCALE)"
        SET_DEBUG_APP="$(AUP_SET_DEBUG_APP)"
        SET_ORIENTATION="$(AUP_SET_ORIENTATION)"
        SET_POINTER_SPEED="$(AUP_SET_POINTER_SPEED)"
        SET_PROCESS_LIMIT="$(AUP_SET_PROCESS_LIMIT)"
        SET_TIME="$(AUP_SET_TIME)"
        SET_TIME_ZONE="$(AUP_SET_TIME_ZONE)"
        SET_WALLPAPER="$(AUP_SET_WALLPAPER)"
        SET_WALLPAPER_HINTS="$(AUP_SET_WALLPAPER_HINTS)"
        SIGNAL_PERSISTENT_PROCESSES="$(AUP_SIGNAL_PERSISTENT_PROCESSES)"
        STATUS_BAR="$(AUP_STATUS_BAR)"
        SUBSCRIBED_FEEDS_READ="$(AUP_SUBSCRIBED_FEEDS_READ)"
        SUBSCRIBED_FEEDS_WRITE="$(AUP_SUBSCRIBED_FEEDS_WRITE)"
        SYSTEM_ALERT_WINDOW="$(AUP_SYSTEM_ALERT_WINDOW)"
        UPDATE_DEVICE_STATS="$(AUP_UPDATE_DEVICE_STATS)"
        USE_CREDENTIALS="$(AUP_USE_CREDENTIALS)"
        USE_SIP="$(AUP_USE_SIP)"
        VENDING_BILLING="$(AUP_COM_VENDING_BILLING)"
        VIBRATE="$(AUP_VIBRATE)"
        WAKE_LOCK="$(AUP_WAKE_LOCK)"
        WRITE_APN_SETTINGS="$(AUP_WRITE_APN_SETTINGS)"
        WRITE_CALENDAR="$(AUP_WRITE_CALENDAR)"
        WRITE_CALL_LOG="$(AUP_WRITE_CALL_LOG)"
        WRITE_CONTACTS="$(AUP_WRITE_CONTACTS)"
        WRITE_EXTERNAL_STORAGE="$(AUP_WRITE_EXTERNAL_STORAGE)"
        WRITE_GSERVICES="$(AUP_WRITE_GSERVICES)"
        WRITE_HISTORY_BOOKMARKS="$(AUP_WRITE_HISTORY_BOOKMARKS)"
        WRITE_PROFILE="$(AUP_WRITE_PROFILE)"
        WRITE_SECURE_SETTINGS="$(AUP_WRITE_SECURE_SETTINGS)"
        WRITE_SETTINGS="$(AUP_WRITE_SETTINGS)"
        WRITE_SMS="$(AUP_WRITE_SMS)"
        WRITE_SOCIAL_STREAM="$(AUP_WRITE_SOCIAL_STREAM)"
        WRITE_SYNC_SETTINGS="$(AUP_WRITE_SYNC_SETTINGS)"
        WRITE_USER_DICTIONARY="$(AUP_WRITE_USER_DICTIONARY)"
    />
  </Target>







  <!--
  ========================================================================
               Clean
    Cleans intermediates and final outputs.
  ========================================================================
  -->

  <PropertyGroup>
    <CleanDependsOn>
      ResolveFiles;
      CleanOutputs;
      CleanResources;
    </CleanDependsOn>
  </PropertyGroup>

  <Target Name="Clean" DependsOnTargets="$(CleanDependsOn)"/>

  <Target Name="CleanReadFiles">
    <ReadLinesFromFile File="$(ProducedFileList)">
      <Output TaskParameter="Lines" ItemName="_DeleteFiles"/>
    </ReadLinesFromFile>
  </Target>

  <Target Name="CleanOutputs" DependsOnTargets="CleanReadFiles">
    <Delete Files="
      @(_OutputFiles);
      @(__OutputFiles);
      @(_DeleteFiles);
      $(ProducedFileList)
    "/>
  </Target>

  <Target Name="CleanVersionResources" DependsOnTargets="ResolveFiles;__SetVersionResourceFileName">
    <Delete Files="@(__ProjectVersionOutputFile)" Condition="!Exists('@(__ProjectVersionFile)')"/>
    <Delete Files="@(__Icon_MainIcon)" Condition="'$(Platform)'=='OSX32'"/>
  </Target>

  <Target Name="CleanResources" >
    <Delete Files="
      @(_ResourceFiles);
      @(_LocalizedResources)
    "/>
  </Target>

  <!--
  ========================================================================
               RIDL Targets
    Dependency check and build .ridl files to .tlb
  ========================================================================
  -->
  <Target Name="_RidlDepCheck">
    <DependencyCheck
      InputFiles="@(RidlCompile)"
      OutputFile="$(GENTLB_OutputDir)$(GENTLB_OutputName)"
      ProjectFileName="$(MSBuildProjectFullPath)"
      AllOrNone="true"
      Build="$(ForceRebuild)"
    >
      <Output
        TaskParameter="OutOfDate"
        ItemName="RidlFiles"
      />
      <Output
        TaskParameter="Skipped"
        ItemName="SkippedRidlFiles"
      />
    </DependencyCheck>
    <MessageMap 
      Condition="'@(SkippedRidlFiles)'!=''"
      FormatString="strSkipping"
      Arg0="@(SkippedRidlFiles)"
    />
    <MessageMap
      Condition="'@(RidlFiles)'!='' And '$(ForceRebuild)'!='true'"
      FormatString="strModified"
      Arg0="@(RidlFiles)"
    />
  </Target>

  <Target Name="RidlCompile" DependsOnTargets="_RidlDepCheck">
    <CallTarget Targets="_RidlCoreCompile"/>
  </Target>
  
  <Target Name="_RidlCoreCompile" DependsOnTargets="$(_ResolveGENTLBBindingsTarget)">
    <GenTLB 
      Condition="'@(RidlFiles)'!=''"
      Compile="@(RidlFiles)"
      PlatformTarget="$(Platform)"
      OutputDir="$(GENTLB_OutputDir)"
      OutputName="$(GENTLB_OutputName)"
      TlbFiles="$(GENTLB_OutputDir)$(GENTLB_OutputName)"
      SourceFiles="@(GENTLB_Bindings)"
      UserSuppliedOptions="$(GENTLB_UserSuppliedOptions)"
      GenCppBindings="$(GENTLB_GenCppBindings)"
      GenPasBindings="$(GENTLB_GenPasBindings)"
      Gen64BitTypeLib="$(Gen64BitTypeLib)"
    />
  </Target>

  <Target Name="_ResolveTDumpInput">
    <CreateItem
      Condition="'$(FileToCompile)'!=''"
      Include="$(FileToCompile)">
      <Output
        TaskParameter="Include"
        ItemName="TDumpInput"
      />
    </CreateItem>
  </Target>

  <Target Name="TDump" DependsOnTargets="_ResolveTDumpInput;">
    <TDUMP
      Filename="%(TDumpInput.Identity)"
      PlatformTarget="$(Platform)"
      ListFile="$(TDumpOutputFile)"
          _8BitASCII="$(TDUMP__8BitASCII)"
          _7BitASCII="$(TDUMP__7BitASCII)"
          Verbose="$(TDUMP_Verbose)"
          Raw="$(TDUMP_Raw)"
          NoDemangling="$(TDUMP_NoDemangling)"
          Executable="$(TDUMP_Executable)"
          DisableExeDebugInfo="$(TDUMP_DisableExeDebugInfo)"
          DisableExeLineNumbers="$(TDUMP_DisableExeLineNumbers)"
          DisableExeHeader="$(TDUMP_DisableExeHeader)"
          ListExportsOnly="$(TDUMP_ListExportsOnly)"
          IncludeOnlyExeTableId="$(TDUMP_IncludeOnlyExeTableId)"
          DisableExeRelocationRecords="$(TDUMP_DisableExeRelocationRecords)"
          ListImportsOnly="$(TDUMP_ListImportsOnly)"
          ListImportedModulesOnly="$(TDUMP_ListImportedModulesOnly)"
          DisplayRelocationTable="$(TDUMP_DisplayRelocationTable)"
          Object="$(TDUMP_Object)"
          DisplayDebugInfoInObj="$(TDUMP_DisplayDebugInfoInObj)"
          IncludeRecord="$(TDUMP_IncludeRecord)"
          ExcludeRecord="$(TDUMP_ExcludeRecord)"
          Library="$(TDUMP_Library)"
          DisplayDebugInfoInLib="$(TDUMP_DisplayDebugInfoInLib)"
          DisplayIMPDEF="$(TDUMP_DisplayIMPDEF)"
          DisplayEXPDEF="$(TDUMP_DisplayEXPDEF)"
          Unassemble="$(TDUMP_Unassemble)"
    />
  </Target>
  

<!-- Internal targets used by the IDE -->
  <PropertyGroup>
    <_KibitzItemNames>BCC32_CmdLine;BRCC32_CmdLine;TASM32_CmdLine;BCC_CmdLine;IDEDepCheck;EvaluateProperty;EvaluateItem</_KibitzItemNames>
    <_KibitzItemName Condition="'$(_KibitzTask)'=='BCC32_CmdLine'">CppFiles</_KibitzItemName>
    <_KibitzItemName Condition="'$(_KibitzTask)'=='BRCC32_CmdLine'">RcFiles</_KibitzItemName>
    <_KibitzItemName Condition="'$(_KibitzTask)'=='TASM32_CmdLine'">AsmFiles</_KibitzItemName>
    <_KibitzItemName Condition="'$(_KibitzTask)'=='DCC_CmdLine'">PasFiles</_KibitzItemName>
  </PropertyGroup>
  
  <Target Name="_SetKibitzProperties">
    <CreateItem 
      Include="$(FileToCompile)"
      Condition="'$(FileToCompile)'!='' And '$(_KibitzTask)'!='' And '$(_KibitzItemName)'!=''">
      <Output 
        TaskParameter="Include"
        ItemName="$(_KibitzItemName)"
      />
    </CreateItem>
    <CreateProperty
      Value="true">
      <Output
        TaskParameter="Value"
        PropertyName="ShowStdOut" 
      />
    </CreateProperty>
  </Target>
  
  <Target Name="_Kibitz" DependsOnTargets="_SetKibitzProperties">
    <Error Condition="'$(_KibitzTask)'==''"
      Text="'_KibitzTask' property not specified. Must be one of: $(_KibitzItemNames)"/>
    <CallTarget Targets="_CppCoreCompile" Condition="'$(_KibitzTask)'=='BCC32_CmdLine'"/>
    <CallTarget Targets="_RcCoreCompile" Condition="'$(_KibitzTask)'=='BRCC32_CmdLine'"/>
    <CallTarget Targets="_AsmCoreCompile" Condition="'$(_KibitzTask)'=='TASM32_CmdLine'"/>
    <CallTarget Targets="_PasKibitzCompile" Condition="'$(_KibitzTask)'=='DCC_CmdLine'"/>
    <CallTarget Targets="_IDEDepCheck" Condition="'$(_KibitzTask)'=='IDEDepCheck'"/>
    <CallTarget Targets="_EvaluateProperty" Condition="'$(_KibitzTask)'=='EvaluateProperty'"/>
    <CallTarget Targets="_EvaluateItem" Condition="'$(_KibitzTask)'=='EvaluateItem'"/>
  </Target>
  
  <Target Name="_CreatePropHolder">
    <CreateItem
      Include="$(_EvaluateName)">
      <Output 
        TaskParameter="Include"
        ItemName="PropHolder"
      />
    </CreateItem>
  </Target>
  
  <PropertyGroup>
    <__MetadataName Condition="'$(__MetadataName)'==''">Identity</__MetadataName>
  </PropertyGroup>

  <Target Name="_CreateItemHolder">
    <CreateItem
      Include="@($(_EvaluateName)->'%($(__MetadataName))')">
      <Output 
        TaskParameter="Include"
        ItemName="__ItemHolder"
      />
    </CreateItem>
  </Target>

  <Target Name="_EvaluateProperty" DependsOnTargets="$(_EvaluatePropertyDependsOnTargets);_CreatePropHolder">
    <BDSCallback
      ID="EvaluateProperty"
      Result="$(%(PropHolder.Identity))"/>
  </Target>

  <Target Name="_EvaluateItem" DependsOnTargets="$(_EvaluateItemDependsOnTargets);_CreateItemHolder">
    <BDSCallback
      ID="EvaluateItem"
      Result="@(__ItemHolder)"/>
  </Target>

  <Target Name="_EvaluateOutputs" DependsOnTargets="$(_EvaluateOutputsDependsOnTargets)">
    <BDSCallback
      ID="_EvaluateOutputs"
      Result="@(__OutputFiles)"/>
  </Target>
  
  <Target Name="_EvaluateProperties">
    <EvaluateProperties
      PropertyNames="$(_EvaluatePropertyNames)"
      Project="$(MSBuildProjectFullPath)"
      Properties="Config=$(Config);Platform=$(Platform)"
      Targets="$(_EvaluatePropertyDependsOnTargets)">
      <Output
        TaskParameter="PropertyValues"
        PropertyName="_EvaluatedProperties"
      />
    </EvaluateProperties>
    <BDSCallback
      ID="_EvaluatedProperties"
      Result="$(_EvaluatedProperties)"/>
  </Target>
</Project>
